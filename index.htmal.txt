<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Currículo Interativo | Fabio Figueiredo</title>
    <!-- Chosen Palette: Calm Professional (Slate background, dark text, sky blue accent) - Alinhado com a estética do currículo original. -->
    <!-- Application Structure Plan: A single-page dashboard with tab-based navigation ('Visão Geral', 'Experiência', 'Habilidades', 'Formação'). This structure breaks down the resume into digestible, interactive sections, making it easier for recruiters to explore than a static document. The focus is on visual storytelling, especially for the Skills and Experience sections, using charts and an interactive timeline to highlight key information quickly. -->
    <!-- Visualization & Content Choices: - Experience: Goal=Organize -> Interactive vertical timeline (HTML/CSS/JS) to show career progression. Justification: More engaging than a list. - Skills: Goal=Compare -> Multiple horizontal bar charts (Chart.js) for different skill categories. Justification: Visualizes strengths and toolset effectively, easier to scan than text. - Education: Goal=Inform -> Card-based layout to highlight the ongoing Pós-MIT. Justification: Draws attention to current, high-value qualifications. All interactions are handled with vanilla JS to keep it lightweight. - New Feature (Gemini API): Goal=Generate -> Text generation for personalized cover letters based on resume content and user-provided job description. Justification: Adds practical value for job seekers, showcasing AI integration. -->
    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        .chart-container {
            position: relative;
            height: 250px;
            width: 100%;
        }
        .timeline-item .timeline-content {
            transition: max-height 0.5s ease-out, opacity 0.5s ease-out;
            max-height: 0;
            opacity: 0;
            overflow: hidden;
        }
        .timeline-item.active .timeline-content {
            max-height: 500px;
            opacity: 1;
        }
        .loading-spinner {
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-left-color: #0ea5e9;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            animation: spin 1s linear infinite;
            display: none; /* Hidden by default */
        }
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
    </style>
</head>
<body class="bg-slate-50 text-slate-700">

    <div class="container mx-auto p-4 md:p-8 max-w-6xl">
        
        <!-- Header -->
        <header class="text-center mb-10 flex flex-col items-center">
            
            <h1 class="text-4xl md:text-5xl font-bold text-slate-900">Fabio Figueiredo</h1>
            <p class="text-lg md:text-xl text-sky-600 mt-2">Programador Python Júnior | Analista de Dados & BI | Especialista em Infraestrutura de TI</p>
        </header>

        <!-- Navigation -->
        <nav class="mb-10">
            <ul id="navigation" class="flex flex-wrap justify-center gap-2 md:gap-4 border-b-2 border-slate-200 pb-3">
                <li><button data-section="overview" class="nav-btn active px-4 py-2 font-semibold rounded-lg">Visão Geral</button></li>
                <li><button data-section="experience" class="nav-btn px-4 py-2 font-semibold rounded-lg">Experiência</button></li>
                <li><button data-section="skills" class="nav-btn px-4 py-2 font-semibold rounded-lg">Habilidades</button></li>
                <li><button data-section="education" class="nav-btn px-4 py-2 font-semibold rounded-lg">Formação</button></li>
            </ul>
        </nav>

        <!-- Main Content -->
        <main id="main-content" class="bg-white p-6 md:p-8 rounded-2xl shadow-lg min-h-[50vh]">
            <!-- Content will be injected here by JavaScript -->
        </main>

         <!-- Footer -->
        <footer class="text-center mt-10 text-slate-500">
            <p>&copy; 2025 Fabio Figueiredo. Currículo interativo desenvolvido com HTML, Tailwind CSS e Chart.js.</p>
        </footer>

    </div>

    <script>
        const cvData = {
            name: "Fabio Figueiredo",
            title: "Programador Python Júnior | Analista de Dados & BI | Especialista em Infraestrutura de TI",
            contact: {
                phone: "(21) 96464-1561",
                email: "fabioinformacao@gmail.com",
                linkedin: "linkedin.com/in/fabio-figueiredo-295a8191",
                linkedinUrl: "https://linkedin.com/in/fabio-figueiredo-295a8191"
            },
            summary: "Profissional de tecnologia com 9 anos de experiência em infraestrutura de TI, em <strong>transição estratégica para as áreas de Programação Python, Inteligência Artificial e Análise de Dados</strong>. Minha sólida base técnica e experiência com sistemas complexos me proporcionam um entendimento valioso para otimizar fluxos de dados e ambientes para a implementação de soluções de IA. Atualmente, atuo como <strong>Programador Júnior em Python</strong>, com foco em <strong>extração de dados</strong> de diversas fontes (APIs, planilhas Excel/Google Sheets, páginas web rastreáveis) e uso de bibliotecas como Pandas. Estou aprofundando minha proficiência em análise de dados e <strong>IA com uma Pós-Graduação MIT em Inteligência Artificial, Machine Learning e Deep Learning</strong>. Meu objetivo é combinar minha expertise em infraestrutura com minhas novas habilidades em Python e IA para desenvolver soluções inovadoras que transformem dados brutos em insights e gerem valor estratégico.",
            experience: [
                {
                    company: "MEGATRAX BRASIL",
                    period: "Janeiro 2019 – Atual",
                    title: "Analista Pleno de Tecnologia da Informação",
                    description: [
                        "Ponto focal de suporte para produtoras de conteúdo, garantindo a eficiência de plataforma e acervo de trilhas sonoras.",
                        "Responsável pela gestão e manutenção contínua de bases de dados, aprimorando habilidades em governança e otimização de processos essenciais para a Ciência de Dados.",
                        "<strong>Experiência em extração de dados através de APIs com Python, planilhas Excel, Google Sheets e páginas web rastreáveis.</strong>"
                    ]
                },
                {
                    company: "Pentagono SA DTVM",
                    period: "Maio 2018 – Junho 2025",
                    title: "Analista Pleno de Tecnologia da Informação",
                    description: [
                        "Garantia da disponibilidade e segurança da infraestrutura de TI em ambiente de mercado de capitais, implementando novas tecnologias e otimizando operações.",
                        "Análise de dados e proficiência em ferramentas como Zabbix, Hyper-V, Exchange, Windows Server 2016, Linux, Uni-fi, Redes e cloud computing, contribuindo para a estabilidade e eficiência tecnológica."
                    ]
                },
                {
                    company: "PC Audio e Video",
                    period: "Janeiro 2017 – Dezembro 2018",
                    title: "Analista de Suporte TI",
                    description: [
                        "Otimização de operações tecnológicas e suporte diário a hardware, software e rede.",
                        "Desenvolvimento de soluções web customizadas (Bootstrap 5, PHP) e gerenciamento de suporte técnico a transmissões de vídeo ao vivo."
                    ]
                }
            ],
            education: [
                {
                    title: "Pós-Graduação MIT em Inteligência Artificial, Machine Learning e Deep Learning",
                    institution: "Instituto Infnet | 2025 - Cursando",
                    description: "Aprofundamento em Algoritmos de IA, Modelagem Preditiva, Redes Neurais Profundas, Processamento de Linguagem Natural (NLP), Visão Computacional e Análise de Dados em Larga Escala. Ênfase em Python e frameworks como TensorFlow e PyTorch."
                },
                {
                    title: "Data Analytics com Power BI",
                    institution: "DIO",
                    description: "Proficiência em Power BI para modelagem, transformação e visualização de dados. Criação de dashboards e relatórios interativos para extrair insights de negócios."
                },
                {
                    title: "Programação Python",
                    institution: "DIO - Santander | 2025",
                    description: "Foco em fundamentos de Python, incluindo estruturas de dados, algoritmos e programação orientada a objetos. Familiaridade com bibliotecas essenciais para Data Science como Pandas e NumPy."
                },
                {
                    title: "Sistema da Informação - Tecnologia da Informação",
                    institution: "Universidade Estácio de Sá | 2015-2019",
                    description: "Sólida base em tecnologia da informação, incluindo redes, sistemas operacionais e banco de dados."
                }
            ],
            skills: {
                "Linguagens de Programação": [
                    { name: "Python (Pandas, NumPy, Django, Fast API)", level: 90 },
                    { name: "SQL (PostgreSQL, MySQL, SQL Server)", level: 85 },
                    { name: "PHP", level: 60 }
                ],
                "Análise e Visualização de Dados": [
                    { name: "Power BI", level: 95 },
                    { name: "Jupyter Notebooks", level: 80 }
                ],
                "Bancos de Dados": [
                    { name: "SQL Server", level: 80 },
                    { name: "PostgreSQL", level: 75 },
                    { name: "MySQL", level: 75 },
                    { name: "NoSQL (MongoDB)", level: 65 }
                ],
                 "Ferramentas & Plataformas de TI": [
                    { name: "Docker", level: 70 },
                    { name: "Zabbix", level: 90 },
                    { name: "Hyper-V", level: 85 },
                    { name: "Windows Server", level: 90 },
                    { name: "Linux", level: 80 },
                ],
                "Cloud & Redes": [
                    { name: "Azure (Serviços de IA/ML)", level: 70 },
                    { name: "Cloud Computing (Geral)", level: 75 },
                    { name: "Redes & Uni-Fi", level: 85 }
                ]
            },
            languages: [
                { lang: "Português", level: "Nativo" },
                { lang: "Inglês", level: "Intermediário (Leitura Técnica)" }
            ]
        };

        const mainContent = document.getElementById('main-content');
        const navButtons = document.querySelectorAll('.nav-btn');

        const renderOverview = () => {
            mainContent.innerHTML = `
                <div class="animate-fade-in">
                    <h2 class="text-3xl font-bold text-slate-800 mb-4">Resumo Profissional</h2>
                    <p class="text-lg leading-relaxed text-slate-600">${cvData.summary}</p>
                    <div class="mt-8 pt-6 border-t border-slate-200">
                        <h3 class="text-2xl font-bold text-slate-800 mb-4">Contato</h3>
                        <div class="flex flex-col md:flex-row gap-6 text-lg">
                            <div class="flex items-center gap-3">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-sky-600" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/></svg>
                                <span>${cvData.contact.phone}</span>
                            </div>
                            <div class="flex items-center gap-3">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-sky-600" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/></svg>
                                <span>${cvData.contact.email}</span>
                            </div>
                            <div class="flex items-center gap-3">
                               <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-sky-600" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" /></svg>
                                <a href="${cvData.contact.linkedinUrl}" target="_blank" class="text-sky-600 hover:underline">${cvData.contact.linkedin}</a>
                            </div>
                        </div>
                    </div>

                    <div class="mt-8 pt-6 border-t border-slate-200">
                        <h3 class="text-2xl font-bold text-slate-800 mb-4">Ferramentas de IA</h3>
                        <button id="generateCoverLetterBtn" class="bg-sky-500 hover:bg-sky-600 text-white font-bold py-2 px-4 rounded-lg shadow-md transition duration-300 ease-in-out transform hover:scale-105">
                            Gerar Carta de Apresentação ✨
                        </button>

                        <div id="coverLetterGenerator" class="hidden mt-6 p-4 bg-slate-50 rounded-lg border border-slate-200">
                            <label for="jobDescription" class="block text-slate-700 text-lg font-semibold mb-2">Cole a descrição da vaga aqui:</label>
                            <textarea id="jobDescription" class="w-full p-3 border border-slate-300 rounded-lg focus:ring-sky-500 focus:border-sky-500 h-40 resize-y" placeholder="Ex: Analista de Dados com experiência em Power BI e Python..."></textarea>
                            <button id="submitCoverLetterBtn" class="mt-4 bg-sky-500 hover:bg-sky-600 text-white font-bold py-2 px-4 rounded-lg shadow-md transition duration-300 ease-in-out transform hover:scale-105">
                                Gerar Carta
                            </button>
                            <div id="loadingSpinner" class="loading-spinner mt-4 mx-auto"></div>
                            <div id="coverLetterOutput" class="mt-6 p-4 bg-white rounded-lg border border-slate-300 text-slate-700 whitespace-pre-wrap" style="min-height: 100px;"></div>
                            <div id="coverLetterError" class="mt-4 text-red-600 font-semibold hidden"></div>
                        </div>
                    </div>
                </div>
            `;

            document.getElementById('generateCoverLetterBtn').addEventListener('click', () => {
                document.getElementById('coverLetterGenerator').classList.toggle('hidden');
                document.getElementById('coverLetterOutput').innerHTML = ''; // Clear previous output
                document.getElementById('coverLetterError').classList.add('hidden'); // Hide error
            });

            document.getElementById('submitCoverLetterBtn').addEventListener('click', generateCoverLetter);
        };

        const renderExperience = () => {
            let content = `<h2 class="text-3xl font-bold text-slate-800 mb-8">Experiência Profissional</h2>`;
            content += '<div class="relative border-l-2 border-slate-200 ml-4">';
            
            cvData.experience.forEach((job, index) => {
                content += `
                <div class="mb-8 ml-8 timeline-item cursor-pointer" onclick="toggleTimelineItem(this)">
                    <div class="absolute -left-5 -top-1.5 flex items-center justify-center w-8 h-8 bg-sky-500 rounded-full ring-8 ring-white">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" /></svg>
                    </div>
                    <div class="p-1">
                        <h3 class="text-xl font-semibold text-slate-900">${job.title}</h3>
                        <p class="text-md font-medium text-sky-600">${job.company}</p>
                        <time class="block mb-2 text-sm font-normal leading-none text-slate-400">${job.period}</time>
                        <div class="timeline-content">
                            <ul class="list-disc pl-5 mt-2 space-y-1 text-slate-600">
                                ${job.description.map(d => `<li>${d}</li>`).join('')}
                            </ul>
                        </div>
                    </div>
                </div>
                `;
            });
            content += '</div>';
            mainContent.innerHTML = content;
        };
        
        const renderSkills = () => {
            let content = `<h2 class="text-3xl font-bold text-slate-800 mb-8">Habilidades Técnicas</h2>`;
            content += `<div class="grid grid-cols-1 lg:grid-cols-2 gap-8">`;
            Object.keys(cvData.skills).forEach(category => {
                content += `
                    <div class="bg-slate-50 p-4 rounded-lg">
                        <h3 class="text-xl font-semibold text-slate-800 mb-4">${category}</h3>
                        <div class="chart-container">
                            <canvas id="chart-${category.replace(/[^a-zA-Z0-9]/g, '')}"></canvas>
                        </div>
                    </div>
                `;
            });
            content += `</div>`;
            mainContent.innerHTML = content;

            // Render charts
            Object.keys(cvData.skills).forEach(category => {
                const ctx = document.getElementById(`chart-${category.replace(/[^a-zA-Z0-9]/g, '')}`).getContext('2d');
                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: cvData.skills[category].map(skill => skill.name),
                        datasets: [{
                            label: 'Proficiência',
                            data: cvData.skills[category].map(skill => skill.level),
                            backgroundColor: 'rgba(14, 165, 233, 0.6)',
                            borderColor: 'rgba(14, 165, 233, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        indexAxis: 'y',
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            x: {
                                beginAtZero: true,
                                max: 100,
                                grid: {
                                    display: false
                                }
                            },
                             y: {
                                grid: {
                                    display: false
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                display: false
                            },
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        return ` Proficiência: ${context.raw}%`;
                                    }
                                }
                            }
                        }
                    }
                });
            });
        };

        const renderEducation = () => {
            let content = `<h2 class="text-3xl font-bold text-slate-800 mb-8">Formação Acadêmica e Cursos</h2>`;
            content += `<div class="space-y-6">`;
            cvData.education.forEach(edu => {
                content += `
                    <div class="bg-slate-50 p-6 rounded-lg border border-l-4 border-l-sky-500">
                        <h3 class="text-xl font-semibold text-slate-900">${edu.title}</h3>
                        <p class="text-md font-medium text-sky-600 mb-2">${edu.institution}</p>
                        <p class="text-slate-600">${edu.description}</p>
                    </div>
                `;
            });
            content += '</div>';
            mainContent.innerHTML = content;
        };

        const handleNavigation = (e) => {
            if (!e.target.matches('.nav-btn')) return;

            navButtons.forEach(btn => btn.classList.remove('active', 'bg-sky-500', 'text-white'));
            e.target.classList.add('active', 'bg-sky-500', 'text-white');

            const section = e.target.dataset.section;
            switch (section) {
                case 'overview':
                    renderOverview();
                    break;
                case 'experience':
                    renderExperience();
                    break;
                case 'skills':
                    renderSkills();
                    break;
                case 'education':
                    renderEducation();
                    break;
            }
        };

        const toggleTimelineItem = (element) => {
            element.classList.toggle('active');
        };

        document.getElementById('navigation').addEventListener('click', handleNavigation);

        // Function to generate cover letter using Gemini API
        async function generateCoverLetter() {
            const jobDescription = document.getElementById('jobDescription').value;
            const coverLetterOutput = document.getElementById('coverLetterOutput');
            const loadingSpinner = document.getElementById('loadingSpinner');
            const coverLetterError = document.getElementById('coverLetterError');

            if (!jobDescription.trim()) {
                coverLetterError.textContent = "Por favor, insira a descrição da vaga.";
                coverLetterError.classList.remove('hidden');
                return;
            }

            coverLetterOutput.innerHTML = '';
            coverLetterError.classList.add('hidden');
            loadingSpinner.style.display = 'block'; // Show spinner

            const prompt = `Com base no seguinte currículo e na descrição da vaga de emprego, escreva uma carta de apresentação concisa e persuasiva em português. A carta deve destacar as habilidades e experiências mais relevantes do currículo que se alinham com os requisitos da vaga.

---
**Currículo de Fabio Figueiredo:**

**Resumo:**
${cvData.summary}

**Experiência:**
${cvData.experience.map(job => `
- ${job.title} na ${job.company} (${job.period}): ${job.description.join(' ')}
`).join('\n')}

**Habilidades (principais):**
${Object.keys(cvData.skills).map(category => `
- ${category}: ${cvData.skills[category].map(skill => skill.name).join(', ')}
`).join('\n')}

**Formação:**
${cvData.education.map(edu => `
- ${edu.title} (${edu.institution}): ${edu.description}
`).join('\n')}

---
**Descrição da Vaga de Emprego:**
${jobDescription}
---

Por favor, comece a carta com uma saudação formal e termine com uma despedida profissional. Não inclua informações de contato na carta, pois elas já estão no currículo. Limite a carta a aproximadamente 200-300 palavras.`;

            let chatHistory = [];
            chatHistory.push({ role: "user", parts: [{ text: prompt }] });
            const payload = { contents: chatHistory };
            const apiKey = "";
            const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;

            try {
                const response = await fetch(apiUrl, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });
                const result = await response.json();

                if (result.candidates && result.candidates.length > 0 &&
                    result.candidates[0].content && result.candidates[0].content.parts &&
                    result.candidates[0].content.parts.length > 0) {
                    const text = result.candidates[0].content.parts[0].text;
                    coverLetterOutput.textContent = text;
                } else {
                    coverLetterError.textContent = "Não foi possível gerar a carta de apresentação. Tente novamente.";
                    coverLetterError.classList.remove('hidden');
                }
            } catch (error) {
                console.error("Erro ao chamar a API Gemini:", error);
                coverLetterError.textContent = "Ocorreu um erro ao conectar com o serviço de IA. Verifique sua conexão ou tente mais tarde.";
                coverLetterError.classList.remove('hidden');
            } finally {
                loadingSpinner.style.display = 'none'; // Hide spinner
            }
        }

        // Initial render
        renderOverview();
        document.querySelector('.nav-btn[data-section="overview"]').classList.add('bg-sky-500', 'text-white');

        // Add simple fade-in animation for main content changes
        const style = document.createElement('style');
        style.innerHTML = `
            @keyframes fade-in {
                from { opacity: 0; transform: translateY(10px); }
                to { opacity: 1; transform: translateY(0); }
            }
            .animate-fade-in {
                animation: fade-in 0.5s ease-out forwards;
            }
            .nav-btn.active {
                background-color: #0ea5e9; /* sky-500 */
                color: white;
            }
            .nav-btn {
                transition: all 0.2s ease-in-out;
            }
            .nav-btn:not(.active):hover {
                background-color: #f1f5f9; /* slate-100 */
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>